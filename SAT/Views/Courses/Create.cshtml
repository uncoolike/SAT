@model SAT.DATA.Course

@{
    ViewBag.Title = "Create A Class";
}

<h1>@ViewBag.Title</h1>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    @*<div class="card col-md-4 mx-auto border-0 p-3 mb-4">
            <div class="form-horizontal mx-auto">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.CourseID)

                <div class="form-group">
                    @Html.LabelFor(model => model.CourseName, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.CourseName, new { htmlAttributes = new { @class = "form-control m-2" } })
                    @Html.ValidationMessageFor(model => model.CourseName, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.CourseDescription, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.CourseDescription, new { htmlAttributes = new { @class = "form-control m-2" } })
                    @Html.ValidationMessageFor(model => model.CourseDescription, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CreditHours, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.CreditHours, new { htmlAttributes = new { @class = "form-control m-2" } })
                    @Html.ValidationMessageFor(model => model.CreditHours, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Curriculum, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.Curriculum, new { htmlAttributes = new { @class = "form-control m-2" } })
                    @Html.ValidationMessageFor(model => model.Curriculum, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Notes, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.Notes, new { htmlAttributes = new { @class = "form-control m-2" } })
                    @Html.ValidationMessageFor(model => model.Notes, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label" })
                    @*<div class="checkbox">*
                    @Html.EditorFor(model => model.IsActive)
                    @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                    @*</div>
                    <div class="align-items-center mt-3">
                        <input type="submit" value="Create" class="btn mx-2" />

                        <button class="btn mx-2">
                            @Html.ActionLink("Back to List", "Index")
                        </button>
                    </div>
                </div>

            </div>
        </div>*@

    <div class="card col-md-4 mx-auto border-0 p-3">
        <div class="form-horizontal mx-auto">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.CourseName, htmlAttributes: new { @class = "control-label" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CourseName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CourseName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CourseDescription, htmlAttributes: new { @class = "control-label" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CourseDescription, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CourseDescription, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CreditHours, htmlAttributes: new { @class = "control-label" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CreditHours, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CreditHours, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Curriculum, htmlAttributes: new { @class = "control-label" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Curriculum, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Curriculum, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Notes, htmlAttributes: new { @class = "control-label" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Notes, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Notes, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.IsActive)
                @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })

                <div class="align-items-center mt-3">
                    <input type="submit" value="Create" class="btn mx-2" />

                    <button class="btn mx-2"> @Html.ActionLink("Back to List", "Index")</button>
                </div>
            </div>
        </div>
    </div>

}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
